<launch>
  <!-- launch the rgb-d camera -->
  <include file="$(find robot_driver)/launch/openni2.launch" />


  <!-- launching the mobile base node and drivers -->
  <include file="$(find robot_driver)/launch/kobuki_node.launch" />


  <!-- laser scan from depth image 
  <node pkg="depthimage_to_laserscan" type="depthimage_to_laserscan" name="depthimage_to_laserscan">
    <remap from="image"     to="/camera/depth_registered/image_raw"/>
    <remap from="camera_info" to="/camera/depth_registered/camera_info"/>
    <remap from="scan" to="/laser_scan"/>
    <param name="range_max" type="double" value="5"/>
    <param name="scan_time" type="double" value="0.01"/>
    <param name="output_frame_id" type="str" value="base_link" />
    <param name="scan_height" type="int" value="10" />
  </node> -->

  <!-- depending on the angle of the camera, you may have to change the pitch value ... done visually
              also, depending on where you mounted the camera, you may have to change the height -->
  <node pkg="tf" type="static_transform_publisher" name="link_broadcaster_camera" args="0.1 0 0.42 0 -0.025 0 /base_link /camera_link 25" />


  <!-- if you have the laser, you want to create a published tf for the base link to laser frame -->
  <!-- launch the laser -->
  <include file="$(find robot_driver)/launch/rplidar.launch" />
  
  <!-- launch the tf frame broadcaster -->
  <node pkg="tf" type="static_transform_publisher" name="link_broadcaster_laser" args="0 0 0.55 3.1416 0 0 /base_link /laser_link 25" />


  <!-- launch the ekf between the odometry, accelerometers and gyroscope -->
  <include file="$(find robot_driver)/launch/pwc_ekf.launch" />

</launch>
